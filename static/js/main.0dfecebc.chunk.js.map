{"version":3,"sources":["component/Validation.js","App.js","index.js"],"names":["UserDetail","state","formData","firsName","lastName","email","password","repeatPass","submitted","handleChange","event","target","name","value","form","isFormValid","setState","handleSubmit","setTimeout","ValidatorForm","addValidationRule","match","this","Fragment","AppBar","position","Typography","variant","ref","r","onSubmit","label","onChange","firstName","validators","errorMessages","repeatPassword","Button","color","type","disabled","onClick","continue","Component","theme","createMuiTheme","palette","main","typography","fontSize","App","className","Validation","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAsIeA,E,4MA9HXC,MAAQ,CACJC,SAAU,CACNC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,WAAY,IAEhBC,WAAW,G,EAuBfC,aAAe,SAACC,GAAW,IACfR,EAAa,EAAKD,MAAlBC,SACRA,EAASQ,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MACjB,aAAtBH,EAAMC,OAAOC,MACb,EAAKE,KAAKC,aAAY,GAE1B,EAAKC,SAAS,CAAEd,c,EAEpBe,aAAe,WACX,EAAKD,SAAS,CAACR,WAAW,IAAO,WAC7BU,YAAW,kBAAM,EAAKF,SAAS,CAACR,WAAW,MAAS,S,kEA/BvC,IAAD,OAEhBW,gBAAcC,kBAAkB,mBAAmB,SAACP,GAEhD,OAAIA,IADiB,EAAKZ,MAAlBC,SACeI,YAM3Ba,gBAAcC,kBAAkB,UAAU,SAACP,GAEvC,GAAIA,EAAMQ,MADE,qEAER,OAAO,O,+BAwBT,IAAD,SAE2BC,KAAKrB,MAA7BC,EAFH,EAEGA,SAAUM,EAFb,EAEaA,UAClB,OACQ,kBAAC,IAAMe,SAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBAEJ,kBAAC,gBAAD,CACIC,IAAK,SAAAC,GAAC,OAAK,EAAKf,KAAOe,GACvBC,SAAUR,KAAKL,cAEf,kBAACS,EAAA,EAAD,CAAYC,QAAQ,MAApB,mBACA,kBAAC,gBAAD,CACII,MAAM,OACNC,SAAUV,KAAKb,aACfG,KAAK,YACLC,MAAOX,EAAS+B,UAChBC,WAAY,CAAC,YACbC,cAAe,CAAC,yBAA0B,6BAE9C,6BACA,kBAAC,gBAAD,CACIJ,MAAM,UACNC,SAAUV,KAAKb,aACfG,KAAK,WACLC,MAAOX,EAASE,SAChB8B,WAAY,CAAC,YACbC,cAAe,CAAC,yBAA0B,6BAE9C,6BACA,kBAAC,gBAAD,CACIJ,MAAM,QACNC,SAAUV,KAAKb,aACfG,KAAK,QACLC,MAAOX,EAASG,MAChB6B,WAAY,CAAC,WAAY,WACzBC,cAAe,CAAC,yBAA0B,wBAE9C,6BACA,kBAAC,gBAAD,CACIJ,MAAM,WACNC,SAAUV,KAAKb,aACfG,KAAK,WAELsB,WAAY,CAAC,SAAU,YACvBC,cAAe,CAAC,4BAA6B,0BAC7CtB,MAAOX,EAASI,WAEpB,6BACA,kBAAC,gBAAD,CACIyB,MAAM,kBACNC,SAAUV,KAAKb,aACfG,KAAK,iBAELsB,WAAY,CAAC,kBAAoB,YACjCC,cAAe,CAAC,oBAAqB,0BACrCtB,MAAOX,EAASkC,iBAEpB,6BACA,6BACA,kBAACC,EAAA,EAAD,CACIC,MAAM,UACNX,QAAQ,YACRY,KAAK,SACLC,SAAUhC,EACViC,QAASnB,KAAKoB,UAGTlC,EAAa,cACTA,GAAa,gB,GAtHzBmC,aCDnBC,G,MAAQC,YAAe,CAEzBC,QAAS,CACLC,KAAM,WAEVC,WAAY,CAGRC,SAAU,OAgBHC,EAXH,WACV,OACI,kBAAC,IAAD,CAAkBN,MAAOA,GACzB,yBAAKO,UAAU,OACb,kBAACC,EAAD,SCjBRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0dfecebc.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button' //<Button variant=\"contained\"\nimport Typography from \"@material-ui/core/Typography\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n\nclass UserDetail extends Component {\n    state = {\n        formData: {\n            firsName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            repeatPass: ''\n        },\n        submitted: false,\n    }\n    componentDidMount() {\n        // Password match\n        ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\n            const { formData } = this.state;\n            if (value !== formData.password) {\n                return false;\n            }\n            return true;\n        });\n        // New rule for vaildation\n        ValidatorForm.addValidationRule('Passer', (value) => {\n            let passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$/;\n            if (value.match(passw)) {\n                return true;\n            }\n\n\n        })\n    }\n\n\n    handleChange = (event) => {\n        const { formData } = this.state;\n        formData[event.target.name] = event.target.value;\n        if (event.target.name === 'password') {\n            this.form.isFormValid(false);\n        }\n        this.setState({ formData });\n    }\n    handleSubmit = () => {\n        this.setState({submitted: true}, () => {\n            setTimeout(() => this.setState({submitted: false}), 5000);\n        });\n    }\n\n\n\n    render() {\n\n        const { formData, submitted } = this.state;\n        return (\n                <React.Fragment>\n                    <AppBar position='static'>\n                        <Typography variant='h2'>Sign up, dude</Typography>\n                    </AppBar>\n                    <ValidatorForm\n                        ref={r => (this.form = r)}\n                        onSubmit={this.handleSubmit}\n                    >\n                        <Typography variant='h3'>Enter your info</Typography>\n                        <TextValidator\n                            label=\"Name\"\n                            onChange={this.handleChange}\n                            name=\"firstName\"\n                            value={formData.firstName}\n                            validators={['required']}\n                            errorMessages={['this field is required', 'field can not be empty!']}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Surname\"\n                            onChange={this.handleChange}\n                            name=\"lastName\"\n                            value={formData.lastName}\n                            validators={['required']}\n                            errorMessages={['this field is required', 'field can not be empty!']}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Email\"\n                            onChange={this.handleChange}\n                            name=\"email\"\n                            value={formData.email}\n                            validators={['required', 'isEmail']}\n                            errorMessages={['this field is required', 'email is not valid']}\n                        />\n                        <br />\n                        <TextValidator\n                            label=\"Password\"\n                            onChange={this.handleChange}\n                            name=\"password\"\n                            // type=\"password\"\n                            validators={['Passer', 'required']}\n                            errorMessages={['Too weak password, sry :(', 'this field is required']}\n                            value={formData.password}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Repeat password\"\n                            onChange={this.handleChange}\n                            name=\"repeatPassword\"\n                            // type=\"password\"\n                            validators={['isPasswordMatch',  'required']}\n                            errorMessages={['password mismatch', 'this field is required']}\n                            value={formData.repeatPassword}\n                        />\n                        <br/>\n                        <br/>\n                        <Button\n                            color=\"primary\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                            disabled={submitted}\n                            onClick={this.continue}\n                        >\n                            {\n                                (submitted && 'Signed up!')\n                                || (!submitted && 'Submit')\n                            }\n                        </Button>\n                    </ValidatorForm>\n                </React.Fragment>\n        );\n    }\n}\n\nexport default UserDetail;","import React from 'react';\nimport { MuiThemeProvider,createMuiTheme } from '@material-ui/core/styles';\nimport Validation from \"./component/Validation\";\nimport './App.css';\n\n\nconst theme = createMuiTheme({\n    /* theme for v1.x */\n    palette: {\n        main: '#ff4400'\n    },\n    typography: {\n        // In Chinese and Japanese the characters are usually larger,\n        // so a smaller fontsize may be appropriate.\n        fontSize: 12,\n    },\n\n});\n\nconst App = () => {\n  return (\n      <MuiThemeProvider theme={theme} >\n      <div className=\"App\">\n        <Validation/>\n      </div>\n      </MuiThemeProvider>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}